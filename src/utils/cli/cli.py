# src/utils/cli/cli.py
from colorama import Fore, Style, init
from typing import Optional

class CLIInterface:
    def __init__(self, app_name: str = "Ani4K HUB Watermarker", width: int = 100, 
                line_char: str = "=", accent_color: str = Fore.CYAN):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        :param app_name: –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        :param width: –®–∏—Ä–∏–Ω–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        :param line_char: –°–∏–º–≤–æ–ª –¥–ª—è –ª–∏–Ω–∏–π
        :param accent_color: –û—Å–Ω–æ–≤–Ω–æ–π —Ü–≤–µ—Ç –∞–∫—Ü–µ–Ω—Ç–æ–≤
        """
        init(autoreset=True)
        self.app_name = app_name
        self.width = width
        self.line_char = line_char
        self.accent_color = accent_color
        self.title_color = Fore.YELLOW

    def _create_line(self, color: Optional[str] = None) -> str:
        """–°–æ–∑–¥–∞–µ—Ç –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—É—é –ª–∏–Ω–∏—é"""
        color = color or self.accent_color
        return f"{color}{self.line_char * self.width}"

    def print_app_header(self):
        """–í—ã–≤–æ–¥–∏—Ç –≥–ª–∞–≤–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        print()
        print(self._create_line())
        print(f"{self.title_color}{f' {self.app_name} ':-^{self.width}}")
        print(f"{self._create_line()}\n")

    def print_section(self, title: str, color: Optional[str] = None):
        """–í—ã–≤–æ–¥–∏—Ç —Å–µ–∫—Ü–∏—é —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º"""
        color = color or self.accent_color
        print(f"\n{color}{title:^{self.width}}")
        print(self._create_line(color))

    def print_process_header(self, filename: str):
        """–ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –Ω–∞—á–∞–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞"""
        print(f"\n{self._create_line(Fore.CYAN)}")
        print(f"{Fore.LIGHTYELLOW_EX}üöÄ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞: {filename}")
        print(f"{self._create_line(Fore.CYAN)}\n")

    def print_footer(self, message: str = "–ó–∞–≤–µ—Ä—à–µ–Ω–æ"):
        """–ù–∏–∂–Ω–∏–π –∫–æ–ª–æ–Ω—Ç–∏—Ç—É–ª"""
        print(f"\n{self._create_line(Fore.GREEN)}")
        print(f"{Fore.LIGHTGREEN_EX}{message:^{self.width}}")
        print(self._create_line(Fore.GREEN))

    def print_spacer(self, lines: int = 1):
        """–ü—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏-—Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–∏"""
        print("\n" * (lines - 1))

    def wrap_in_box(self, text: str, color: Optional[str] = None) -> str:
        """–û–±–æ—Ä–∞—á–∏–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç –≤ –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—É—é —Ä–∞–º–∫—É"""
        color = color or self.accent_color
        lines = text.split('\n')
        box = [
            self._create_line(color),
            *[f"{color}‚ïë {Fore.RESET}{line.ljust(self.width - 4)} {color}‚ïë" for line in lines],
            self._create_line(color)
        ]
        return "\n".join(box)

    def print_mode_selection(self, modes: dict, title: str = "–†–µ–∂–∏–º –æ–±—Ä–∞–±–æ—Ç–∫–∏"):
        """–ü—Ä–æ—Å—Ç–æ–π –≤—ã–≤–æ–¥ –º–µ–Ω—é —Å —Ä–∞–º–∫–æ–π"""
        menu_lines = [title]
        for num, desc in modes.items():
            menu_lines.append(f" {num} - {desc}")
        
        print(self.wrap_in_box("\n".join(menu_lines)))
    
    def divider(self):
        """–ü—É–±–ª–∏—á–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è —Å –ø—É—Å—Ç—ã–º–∏ —Å—Ç—Ä–æ–∫–∞–º–∏"""
        print(f"\n{self._create_line()}\n")